services:
  api:
    build: ./docker/php/
    volumes:
      - ./src:/var/www/html/app
    environment:
      - PHP_ENV=development
      - DB_USERNAME=db_user_demo
      - DB_PASSWORD=Dem0123?
      - DB_DATABASE=db_demo
      - DB_HOST=mysql

  nginx:
    build: ./docker/nginx
    volumes:
      - ./src:/var/www/html/app
    ports:
      - "80:80"
    links:
      - api

  mysql:
    build: ./docker/mysql/
    command: --default-authentication-plugin=mysql_native_password
    environment:
      - MYSQL_ROOT_PASSWORD=R0Ot123?
      - MYSQL_USER=db_user_demo
      - MYSQL_PASSWORD=Dem0123?
      - MYSQL_DATABASE=db_demo
    ports:
      - "3306:3306"
    volumes:
      - ./docker/storage/mysql:/var/lib/mysql
      - ./docker/mysql/custom:/etc/mysql/conf.d
  
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.2
    container_name: elasticsearch
    restart: always
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    volumes:
      - ./docker/storage/elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:8.13.2
    restart: always
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200    # address of elasticsearch docker container which kibana will connect
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch                                   # kibana will start when elasticsearch has started
volumes:
  elasticsearch-data: